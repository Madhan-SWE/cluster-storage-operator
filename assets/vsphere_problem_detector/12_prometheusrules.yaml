apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: vsphere-problem-detector
  namespace: openshift-cluster-storage-operator
  labels:
    role: alert-rules
spec:
  groups:
    - name: vsphere-problem-detector.rules
      rules:
      - alert: VSphereOpenshiftNodeHealthFail
        # Using min_over_time to make sure the metric is `1` for whole 5 minutes.
        # A missed scraping (e.g. due to a pod restart) will result in prometheus re-evaluating the the alerting rule.
        expr:  min_over_time(vsphere_node_check_errors[5m]) == 1
        for: 10m
        labels:
          severity: warning
        annotations:
          message: "VSphere health check {{ $labels.check }} is failing on {{ $labels.node }}."
      - alert: VSphereOpenshiftClusterHealthFail
        # Using min_over_time to make sure the metric is `1` for whole 5 minutes.
        # A missed scraping (e.g. due to a pod restart) will result in prometheus re-evaluating the the alerting rule.
        expr: min_over_time(vsphere_cluster_check_errors[5m]) == 1
        for: 10m
        labels:
          severity: warning
        annotations:
          message: "VSphere cluster health checks are failing with {{ $labels.check }}"
      - alert: VSphereOpenshiftConnectionFailure
        # Using min_over_time to make sure the metric is `1` for whole 5 minutes.
        # A missed scraping (e.g. due to a pod restart) will result in prometheus re-evaluating the the alerting rule.
        expr: min_over_time(vsphere_sync_errors[5m]) == 1
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "vsphere-problem-detector is unable to connect to vSphere vCenter."
          description: |
            vsphere-problem-detector cannot access vCenter. As consequence, other OCP components,
            such as storage or machine API, may not be able to access vCenter too and provide
            their services. Detailed error message can be found in Available condition of
            ClusterOperator "storage", either in console
            (Administration -> Cluster settings -> Cluster operators tab -> storage) or on
            command line: oc get clusteroperator storage -o jsonpath='{.status.conditions[?(@.type=="Available")].message}'
      - alert: CSIWithOldVSphereHWVersion
        # Using min_over_time to make sure the metric is `1` for whole 5 minutes.
        # A missed scraping (e.g. due to a pod restart) will result in prometheus re-evaluating the the alerting rule.
        expr: |
          min_over_time(vsphere_node_hw_version_total{hw_version=~"vmx-(11|12|13|14)"}[5m]) > 0
        for: 10m
        labels:
          severity: info
        annotations:
          summary: "Detected vSphere VM with HW version lower than 15, which is being deprecated by Openshift."
          description: |
            The cluster is using VMs with hardware version lower than 15, which is being deprecated by Openshift. Hardware version 15 or greater
            is required by vSphere CSI driver. Please update your VMs to at least HW version 15.
      - alert: VSphereOlderVersionPresent
        # Using min_over_time to make sure the metric is `1` for whole 5 minutes.
        # A missed scraping (e.g. due to a pod restart) will result in prometheus re-evaluating the the alerting rule.
        expr: |
          min_over_time(vsphere_esxi_version_total{api_version!~"6.7.3|7.*"}[5m]) > 0
        for: 10m
        labels:
          severity: info
        annotations:
          summary: "Detected vSphere host with ESXi version less than 6.7u3 in Openshift cluster."
          description: |
            The cluster is using ESXi hosts which are on version less than 6.7u3, which is being deprecated by Openshift. A future version of
            Openshift will remove support for ESXi version less than 6.7u3 and it is recommended to update your hosts to latest ESXi version.
